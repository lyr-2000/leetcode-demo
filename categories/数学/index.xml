<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数学 on 凌冬的代码博客站</title><link>https://lyr-2000.github.io/code/categories/%E6%95%B0%E5%AD%A6/</link><description>Recent content in 数学 on 凌冬的代码博客站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>LYR</copyright><lastBuildDate>Thu, 12 Dec 2024 20:20:19 +0800</lastBuildDate><atom:link href="https://lyr-2000.github.io/code/categories/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml"/><item><title>计算到任意日期的总天数</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%88%B0%E4%BB%BB%E6%84%8F%E6%97%A5%E6%9C%9F%E7%9A%84%E6%80%BB%E5%A4%A9%E6%95%B0/</link><pubDate>Thu, 12 Dec 2024 20:20:19 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%88%B0%E4%BB%BB%E6%84%8F%E6%97%A5%E6%9C%9F%E7%9A%84%E6%80%BB%E5%A4%A9%E6%95%B0/</guid><description>描述 根据输入的日期，计算是这一年的第几天。 保证年份为4位数且日期合法。 进阶：时间复杂度： O(n) ，空间复杂度：O(1) 基础知识 闰年规则： 四闰百不闰</description></item><item><title>最小公倍数</title><link>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/%E6%95%B0%E5%AD%A6/%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/</link><pubDate>Sun, 08 Dec 2024 01:35:52 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/%E6%95%B0%E5%AD%A6/%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/</guid><description>输入两个整数 a 和 b，请你编写一个函数，int lcm(int a, int b)，计算并输出 a和 b的最小公倍数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import &amp;#34;fmt&amp;#34; func lcm(a,b int) int { for i:=1;i&amp;lt;=a*b;i++ {</description></item><item><title>大数乘法</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%95%B0%E5%AD%A6/%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95/</link><pubDate>Wed, 09 Oct 2024 15:37:19 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%95%B0%E5%AD%A6/%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95/</guid><description>字符串相乘 给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。 注意：不能使用任何内置的 BigInteger 库或直接</description></item><item><title>数学</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6/</link><pubDate>Tue, 08 Oct 2024 16:07:58 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6/</guid><description>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。 回文数 是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 例如，121 是回文</description></item><item><title>数学markdown常用公式&amp; latx</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6markdown%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/</link><pubDate>Mon, 22 Jan 2024 00:05:17 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6markdown%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/</guid><description>数学markdown常用公式 参考链接 矩阵 $$ \begin{matrix} 1 &amp;amp; 2 &amp;amp; 3 \ a &amp;amp; b &amp;amp; c \ \end{matrix} $$ $$ \begin{pmatrix} 1 &amp;amp; 2 &amp;amp; 3 \ a &amp;amp; b &amp;amp; c \ \end{pmatrix} $$ $$ \begin{bmatrix} 1 &amp;amp; 2 &amp;amp; 3 \ a &amp;amp; b &amp;amp; c \ \end{bmatrix} $$ 公式</description></item><item><title>lcp.02.分式化简</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lcp.02.%E5%88%86%E5%BC%8F%E5%8C%96%E7%AE%80/</link><pubDate>Sat, 22 Oct 2022 23:21:50 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lcp.02.%E5%88%86%E5%BC%8F%E5%8C%96%E7%AE%80/</guid><description>LCP 02. 分式化简 Description Difficulty: 简单 Related Topics: 数组 , 数学 , 数论 , 模拟 有一个同学在学习分式。他需要将一个连分数化成最简分数，你能帮助他吗？ 连分数是形如上图的分式。在</description></item><item><title>lc.2001.可互换矩形的组数</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.2001.%E5%8F%AF%E4%BA%92%E6%8D%A2%E7%9F%A9%E5%BD%A2%E7%9A%84%E7%BB%84%E6%95%B0/</link><pubDate>Sat, 22 Oct 2022 22:00:35 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.2001.%E5%8F%AF%E4%BA%92%E6%8D%A2%E7%9F%A9%E5%BD%A2%E7%9A%84%E7%BB%84%E6%95%B0/</guid><description>2001. 可互换矩形的组数 Description Difficulty: 中等 Related Topics: 数组 , 哈希表 , 数学 , 计数 , 数论 用一个下标从 0 开始的二维整数数组 rectangles 来表示 n 个矩形，其中 rectangles[i] = [widthi, heighti] 表示第 i 个矩形的宽</description></item><item><title>lc.914.卡牌分组</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.914.%E5%8D%A1%E7%89%8C%E5%88%86%E7%BB%84/</link><pubDate>Sat, 22 Oct 2022 21:42:21 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.914.%E5%8D%A1%E7%89%8C%E5%88%86%E7%BB%84/</guid><description>914. 卡牌分组 Description Difficulty: 简单 Related Topics: 数组 , 哈希表 , 数学 , 计数 , 数论 给定一副牌，每张牌上都写着一个整数。 此时，你需要选定一个数字 X，使我们可以将整副牌按下述</description></item><item><title>lc.926.将字符串翻转到单调递增</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.926.%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BF%BB%E8%BD%AC%E5%88%B0%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E/</link><pubDate>Fri, 21 Oct 2022 00:29:52 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.926.%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BF%BB%E8%BD%AC%E5%88%B0%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E/</guid><description>926. 将字符串翻转到单调递增 Description Difficulty: 中等 Related Topics: 字符串 , 动态规划 如果一个二进制字符串，是以一些 0（可能没有 0）后面跟着一些 1（也可能没有 1）的形式组成的</description></item><item><title>lc.1819.序列中不同最大公约数数量</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1819.%E5%BA%8F%E5%88%97%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E6%95%B0%E9%87%8F/</link><pubDate>Fri, 21 Oct 2022 00:06:51 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1819.%E5%BA%8F%E5%88%97%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E6%95%B0%E9%87%8F/</guid><description>1819. 序列中不同最大公约数的数目 Description Difficulty: 困难 Related Topics: 数组 , 数学 , 计数 , 数论 给你一个由正整数组成的数组 nums 。 数字序列的 最大公约数 定义为序列中所有整数的共有约</description></item><item><title>lc.229.多数元素II</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.229.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0ii/</link><pubDate>Thu, 20 Oct 2022 00:22:02 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.229.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0ii/</guid><description>229. 多数元素 II Description Difficulty: 中等 Related Topics: 数组 , 哈希表 , 计数 , 排序 给定一个大小为 _n_的整数数组，找出其中所有出现超过 ⌊ n/3 ⌋ 次的元素。 示例 1： 1 2 输入：num</description></item><item><title>lc.1201.丑数</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1201.%E4%B8%91%E6%95%B0/</link><pubDate>Wed, 19 Oct 2022 23:46:57 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1201.%E4%B8%91%E6%95%B0/</guid><description>1201. 丑数 III Description Difficulty: 中等 Related Topics: 数学 , 二分查找 , 数论 给你四个整数：n 、a 、b 、c ，请你设计一个算法来找出第 n 个丑数。 丑数是可以被 a 或 b 或 c 整除的 正整数 。</description></item><item><title>lc.1447.最简分数</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1447.%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0/</link><pubDate>Sun, 16 Oct 2022 15:31:51 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1447.%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0/</guid><description>1447. 最简分数 Description Difficulty: 中等 Related Topics: 数学 , 字符串 , 数论 给你一个整数 n ，请你返回所有 0 到 1 之间（不包括 0 和 1）满足分母小于等于 n 的 最简分数 。分数可以以 任意顺</description></item><item><title>lc.1071.字符串的最大公因子</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1071.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E5%AD%90/</link><pubDate>Sun, 16 Oct 2022 15:09:56 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/lc.1071.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E5%AD%90/</guid><description>1071. 字符串的最大公因子 Description Difficulty: 简单 Related Topics: 数学 , 字符串 对于字符串 s 和 t，只有在 s = t + ... + t（t 自身连接 1 次或多次）时，我们才认定 “t 能除尽 s”。 给定</description></item><item><title>欧几里得算法</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 16 Oct 2022 10:06:44 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/</guid><description>欧几里得算法 辗转相除法的意义： 把 一个大规模的问题转化为一个小规模的问题。 辗转相除法用来求解 整数 a,b 的最大公约数, 表示 gcd(a,b), gcd(a,b) = gcd(b,a%b) 证明1： b 和 a%b 的最</description></item></channel></rss>