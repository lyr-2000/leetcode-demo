<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>递归 on 凌冬的代码博客站</title><link>https://lyr-2000.github.io/code/tags/%E9%80%92%E5%BD%92/</link><description>Recent content in 递归 on 凌冬的代码博客站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>LYR</copyright><lastBuildDate>Sun, 14 Jan 2024 22:40:33 +0800</lastBuildDate><atom:link href="https://lyr-2000.github.io/code/tags/%E9%80%92%E5%BD%92/index.xml" rel="self" type="application/rss+xml"/><item><title>lc.51N皇后</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/lc.51n%E7%9A%87%E5%90%8E/</link><pubDate>Sun, 14 Jan 2024 22:40:33 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/lc.51n%E7%9A%87%E5%90%8E/</guid><description>leetcode 51.N 皇后 algorithms Hard (73.94%) Likes: 2007 Dislikes: 0 Total Accepted: 359.3K Total Submissions: 485.8K Testcase Example: &amp;lsquo;4&amp;rsquo; 按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。 n 皇后问题 研究的是如何将 n</description></item><item><title>lc.1625.执行创作后字典序最小的字符串</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%80%92%E5%BD%92/lc.1625.%E6%89%A7%E8%A1%8C%E5%88%9B%E4%BD%9C%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sat, 30 Dec 2023 13:54:29 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%80%92%E5%BD%92/lc.1625.%E6%89%A7%E8%A1%8C%E5%88%9B%E4%BD%9C%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>[1625] 执行操作后字典序最小的字符串 https://leetcode.cn/problems/lexicographically-smallest-string-after-applying-operations/description/ algorithms Medium (66.67%) Likes: 116 Dislikes: 0 Total Accepted: 17.5K Total Submissions: 26.3K Testcase Example: &amp;lsquo;&amp;ldquo;5525&amp;rdquo;\n9\n2&amp;rsquo; 给你一个字符串 s 以及两个整数 a 和 b 。其中，字符串 s 的长度为偶数，且仅由数字 0</description></item><item><title>lc.2193.得到回文串的最少操作次数</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%80%92%E5%BD%92/lc.2193.%E5%BE%97%E5%88%B0%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0/</link><pubDate>Tue, 26 Dec 2023 23:53:41 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%80%92%E5%BD%92/lc.2193.%E5%BE%97%E5%88%B0%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0/</guid><description>[2193] 得到回文串的最少操作次数 https://leetcode.cn/problems/minimum-number-of-moves-to-make-palindrome/description/ algorithms Hard (49.26%) Likes: 53 Dislikes: 0 Total Accepted: 3.6K Total Submissions: 7.3K Testcase Example: &amp;lsquo;&amp;ldquo;aabb&amp;rdquo;&amp;rsquo; 给你一个只包含小写英文字母的字符串 s 。 每一次 操作 ，你可以选择 s 中两个 相邻 的字符，</description></item><item><title>lc.46.全排列</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/lc.46.%E5%85%A8%E6%8E%92%E5%88%97/</link><pubDate>Thu, 25 Aug 2022 23:12:09 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/lc.46.%E5%85%A8%E6%8E%92%E5%88%97/</guid><description>46. 全排列 Description Difficulty: 中等 Related Topics: 数组 , 回溯 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 示例 1： 1 2 输入：nums = [1,2,3]</description></item><item><title>lc.77.组合</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/lc.77.%E7%BB%84%E5%90%88/</link><pubDate>Thu, 25 Aug 2022 22:43:21 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/lc.77.%E7%BB%84%E5%90%88/</guid><description>77. 组合 Description Difficulty: 中等 Related Topics: 回溯 给定两个整数 n 和 k，返回范围 [1, n] 中所有可能的 k 个数的组合。 你可以按 任何顺序 返回答案。 示例 1： 1 2 3 4 5 6 7 8 9 10 输入：</description></item><item><title>子集</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/%E5%AD%90%E9%9B%86/</link><pubDate>Fri, 19 Aug 2022 00:26:47 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/%E5%AD%90%E9%9B%86/</guid><description>剑指 Offer II 079. 所有子集 Description Difficulty: 中等 Related Topics: 位运算 , 数组 , 回溯 给定一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。 解集 不能 包含重复</description></item></channel></rss>