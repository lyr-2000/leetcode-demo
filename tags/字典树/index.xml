<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>字典树 on 凌冬的代码博客站</title><link>https://lyr-2000.github.io/code/tags/%E5%AD%97%E5%85%B8%E6%A0%91/</link><description>Recent content in 字典树 on 凌冬的代码博客站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>LYR</copyright><lastBuildDate>Sun, 23 Oct 2022 15:44:38 +0800</lastBuildDate><atom:link href="https://lyr-2000.github.io/code/tags/%E5%AD%97%E5%85%B8%E6%A0%91/index.xml" rel="self" type="application/rss+xml"/><item><title>lc.17.13.恢复空格</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.17.13.%E6%81%A2%E5%A4%8D%E7%A9%BA%E6%A0%BC/</link><pubDate>Sun, 23 Oct 2022 15:44:38 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.17.13.%E6%81%A2%E5%A4%8D%E7%A9%BA%E6%A0%BC/</guid><description>面试题 17.13. 恢复空格 Description Difficulty: 中等 Related Topics: 字典树 , 数组 , 哈希表 , 字符串 , 动态规划 , 哈希函数 , 滚动哈希 哦，不！你不小心把一个长篇文章中的空格、标点都删掉了，</description></item><item><title>lc.676.实现一个魔法字典</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.676.%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%AD%94%E6%B3%95%E5%AD%97%E5%85%B8/</link><pubDate>Sat, 15 Oct 2022 18:23:56 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.676.%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%AD%94%E6%B3%95%E5%AD%97%E5%85%B8/</guid><description>676. 实现一个魔法字典 Description Difficulty: 中等 Related Topics: 设计 , 字典树 , 哈希表 , 字符串 设计一个使用单词列表进行初始化的数据结构，单词列表中的单词 互不相同 。 如果给出一个单</description></item><item><title>lc.987.二叉树垂序遍历</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.987.%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9E%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Sat, 15 Oct 2022 14:59:15 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.987.%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9E%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>987. 二叉树的垂序遍历 Description Difficulty: 困难 Related Topics: 树 , 深度优先搜索 , 广度优先搜索 , 哈希表 , 二叉树 给你二叉树的根结点 root ，请你设计算法计算二叉树的垂序遍历 序列。 对位</description></item><item><title>lc.133.克隆图</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.133.%E5%85%8B%E9%9A%86%E5%9B%BE/</link><pubDate>Sat, 15 Oct 2022 14:36:26 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.133.%E5%85%8B%E9%9A%86%E5%9B%BE/</guid><description>133. 克隆图 Description Difficulty: 中等 Related Topics: 深度优先搜索 , 广度优先搜索 , 图 , 哈希表 给你无向 ** 连通 **图中一个节点的引用，请你返回该图的 深拷贝 （克隆）。 图中的每个节点</description></item><item><title>lc.241.为运算表达式设计优先级</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.241.%E4%B8%BA%E8%BF%90%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%BE%E8%AE%A1%E4%BC%98%E5%85%88%E7%BA%A7/</link><pubDate>Sat, 15 Oct 2022 14:27:29 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.241.%E4%B8%BA%E8%BF%90%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%BE%E8%AE%A1%E4%BC%98%E5%85%88%E7%BA%A7/</guid><description>241. 为运算表达式设计优先级 Description Difficulty: 中等 Related Topics: 递归 , 记忆化搜索 , 数学 , 字符串 , 动态规划 给你一个由数字和运算符组成的字符串 expression ，按不同优先级组合数字和运算</description></item><item><title>lc.67.最大异或和</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.67.%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%92%8C/</link><pubDate>Sat, 15 Oct 2022 12:16:24 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.67.%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%92%8C/</guid><description>剑指 Offer II 067. 最大的异或 Description Difficulty: 中等 Related Topics: 位运算 , 字典树 , 数组 , 哈希表 给你一个整数数组 nums ，返回nums[i] XOR nums[j] 的最大运算结果，其中 0 ≤ i ≤ j &amp;lt; n 。 示</description></item><item><title>lc.1288.搜索推荐系统</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.1288.%E6%90%9C%E7%B4%A2%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</link><pubDate>Fri, 14 Oct 2022 23:54:49 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.1288.%E6%90%9C%E7%B4%A2%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</guid><description>1268. 搜索推荐系统 Description Difficulty: 中等 Related Topics: 字典树 , 数组 , 字符串 给你一个产品数组 products 和一个字符串 searchWord ，products 数组中每个产品都是一个字符串。 请你设计一个推</description></item><item><title>lc.208.字典树</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.208.%E5%AD%97%E5%85%B8%E6%A0%91/</link><pubDate>Fri, 14 Oct 2022 23:05:31 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/lc.208.%E5%AD%97%E5%85%B8%E6%A0%91/</guid><description>208. 实现 Trie (前缀树) Description Difficulty: 中等 Related Topics: 设计 , 字典树 , 哈希表 , 字符串 Trie （发音类似 &amp;ldquo;try&amp;rdquo;）或者说 前缀树 是一种树形数据结构，用</description></item><item><title>双数组字典树</title><link>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/%E5%8F%8C%E6%95%B0%E7%BB%84%E5%AD%97%E5%85%B8%E6%A0%91/</link><pubDate>Wed, 12 Oct 2022 22:51:08 +0800</pubDate><guid>https://lyr-2000.github.io/code/post/%E7%AE%97%E6%B3%95/%E5%AD%97%E5%85%B8%E6%A0%91/%E5%8F%8C%E6%95%B0%E7%BB%84%E5%AD%97%E5%85%B8%E6%A0%91/</guid><description>双数组字典树 Trie树本质是一个确定的有限状态自动机(DFA)，核心思想是空间换时间，利用字符串的公共前缀来降低查询时间的开销以达到提高效率</description></item></channel></rss>